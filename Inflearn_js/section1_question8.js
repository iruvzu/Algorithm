/*
왕비를 피해 일곱 난쟁이들과 함께 평화롭게 생활하고 있던 백설공주에게 위기가 찾아왔다.
일과를 마치고 돌아온 난쟁이가 일곱 명이 아닌 아홉 명이었던 것이다.
아홉 명의 난쟁이는 모두 자신이 "백설 공주와 일곱 난쟁이"의 주인공이라고 주장했다.
뛰어난 수학적 직관력을 가지고 있던 백설공주는,
다행스럽게도 일곱 난쟁이의 키의 합이 100이 됨을 기억해 냈다.
아홉 난쟁이의 키가 주어졌을 때, 백설공주를 도와 일곱 난쟁이를 찾는 프로그램을 작성하시오.
▣ 입력설명
아홉 개의 줄에 걸쳐 난쟁이들의 키가 주어진다.
주어지는 키는 100을 넘지 않는 자연수이며,
아홉 난쟁이의 키는 모두 다르며,
가능한 정답이 여러 가지인 경우에는 아무거나 출력한다.
▣ 출력설명
입력된 순서대로 일곱 난쟁이의 키를 출력한다.
▣ 입력예제 1
20 7 23 19 10 15 25 8 13
▣ 출력예제 1
20 7 23 19 10 8 13
*/

/*
[풀이]
1. 9명의 키를 함수에 넣음
2. 이중 반복문 사용 필요
3. 0번째 부터 반복문 생성 후 7번 돌려
반복문을 돌면서 7개의 합이 100이 되는 경우를 찾음
5. 이 값에서 경우의 수를 생각하기
    20, 7, 23, 19, 10, 15, 25, 8, 13
    20, 7, 23, 19, 10, 15, 25 -> 8 13 제외
    20, 7, 23, 19, 10, 15, 8 ->
    20, 7, 23, 19, 10, 15, 13
    20, 7, 23, 19, 10, 8, 13

    20, 7, 23, 19, 10, 8, 13
    20, 7, 23, 19, 10, 8, 25
전체 난쟁이 키의 합 계산하기:
우선 아홉 난쟁이의 키를 모두 더해보세요. 이 합을 total_sum이라고 하겠습니다.

제거할 두 난쟁이 찾기:
아홉 난쟁이 중에서 일곱 난쟁이를 선택하려면 두 명을 제거해야 합니다.
제거해야 할 두 난쟁이의 키 합은 total_sum - 100이 됩니다.
왜냐하면, 일곱 난쟁이의 키의 합이 100이 되어야 하므로 나머지 두 명의 키 합은 전체 합에서 100을 뺀 값과 같습니다.
두 난쟁이의 조합 찾기:

이제 이중 반복문을 사용하여 아홉 난쟁이 중 키의 합이 total_sum - 100이 되는 두 난쟁이의 조합을 찾아냅니다.

일곱 난쟁이 선택하기:
그 두 난쟁이를 제외한 나머지 일곱 명이 우리가 찾는 난쟁이들입니다.
*/

function question8(person) {
    var resultPerson = [];

    var totalSum = person.reduce( function(acc, cur) {
        return acc + cur;
    }, 0);

    var personExcept2Sum = totalSum - 100;

    for (var i = 0; i < person.length; i++) {
        for (var j = i + 1; j < person.length; j++) {
            var twoPerson = person[i] + person[j];

            if(personExcept2Sum == twoPerson) {
                console.log("40인거!", person[i], person[j]);
                resultPerson.push(person[i]);
                resultPerson.push(person[j]);
            }
        }
    }

    return resultPerson;
}

console.log(question8([20, 7, 23, 19, 10, 15, 25, 8, 13]));